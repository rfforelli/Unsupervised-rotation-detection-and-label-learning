// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pooling2d_cl_array_array_ap_fixed_1u_config2_s_HH_
#define _pooling2d_cl_array_array_ap_fixed_1u_config2_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "shift_line_buffer_array_ap_fixed_1u_config2_s.h"

namespace ap_rtl {

struct pooling2d_cl_array_array_ap_fixed_1u_config2_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > data_V_data_V_dout;
    sc_in< sc_logic > data_V_data_V_empty_n;
    sc_out< sc_logic > data_V_data_V_read;
    sc_out< sc_lv<16> > res_V_data_V_din;
    sc_in< sc_logic > res_V_data_V_full_n;
    sc_out< sc_logic > res_V_data_V_write;


    // Module declarations
    pooling2d_cl_array_array_ap_fixed_1u_config2_s(sc_module_name name);
    SC_HAS_PROCESS(pooling2d_cl_array_array_ap_fixed_1u_config2_s);

    ~pooling2d_cl_array_array_ap_fixed_1u_config2_s();

    sc_trace_file* mVcdFile;

    shift_line_buffer_array_ap_fixed_1u_config2_s* call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<32> > pX;
    sc_signal< sc_lv<32> > sX;
    sc_signal< sc_lv<32> > pY;
    sc_signal< sc_lv<32> > sY;
    sc_signal< sc_lv<16> > kernel_data_V_1;
    sc_signal< sc_lv<16> > kernel_data_V_2;
    sc_signal< sc_lv<16> > kernel_data_V_3;
    sc_signal< sc_lv<16> > kernel_data_V_5;
    sc_signal< sc_lv<16> > kernel_data_V_6;
    sc_signal< sc_lv<16> > kernel_data_V_7;
    sc_signal< sc_lv<16> > kernel_data_V_9;
    sc_signal< sc_lv<16> > kernel_data_V_10;
    sc_signal< sc_lv<16> > kernel_data_V_11;
    sc_signal< sc_lv<16> > kernel_data_V_13;
    sc_signal< sc_lv<16> > kernel_data_V_14;
    sc_signal< sc_lv<16> > kernel_data_V_15;
    sc_signal< sc_logic > data_V_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln233_reg_680;
    sc_signal< sc_logic > res_V_data_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > and_ln185_2_reg_694;
    sc_signal< sc_lv<14> > indvar_flatten_reg_119;
    sc_signal< sc_lv<1> > icmp_ln233_fu_164_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln233_reg_680_pp0_iter1_reg;
    sc_signal< sc_lv<14> > add_ln233_fu_170_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > tmp_data_0_V_reg_689;
    sc_signal< sc_lv<1> > and_ln185_2_fu_424_p2;
    sc_signal< sc_lv<16> > add_ln703_2_fu_442_p2;
    sc_signal< sc_lv<16> > add_ln703_2_reg_698;
    sc_signal< sc_lv<16> > add_ln703_5_fu_460_p2;
    sc_signal< sc_lv<16> > add_ln703_5_reg_703;
    sc_signal< sc_lv<16> > add_ln703_13_fu_502_p2;
    sc_signal< sc_lv<16> > add_ln703_13_reg_708;
    sc_signal< sc_lv<1> > icmp_ln203_fu_508_p2;
    sc_signal< sc_lv<1> > icmp_ln203_reg_713;
    sc_signal< sc_lv<1> > icmp_ln207_fu_558_p2;
    sc_signal< sc_lv<32> > select_ln213_fu_582_p3;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start;
    sc_signal< sc_logic > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_done;
    sc_signal< sc_logic > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_idle;
    sc_signal< sc_logic > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ready;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_0;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_1;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_2;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_3;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_4;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_5;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_6;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_7;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_8;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_9;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_10;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_11;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_12;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_13;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_14;
    sc_signal< sc_lv<16> > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_15;
    sc_signal< sc_logic > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ce;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0_ignore_call18;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1_ignore_call18;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2_ignore_call18;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3_ignore_call18;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp27;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_storemerge_i_i_reg_130;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_storemerge_i_i_reg_130;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter2_storemerge_i_i_reg_130;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter3_storemerge_i_i_reg_130;
    sc_signal< sc_logic > call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start_reg;
    sc_signal< sc_lv<32> > add_ln216_fu_514_p2;
    sc_signal< sc_lv<32> > select_ln218_fu_532_p3;
    sc_signal< sc_lv<32> > add_ln211_fu_564_p2;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_sY_load;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<1> > icmp_ln185_fu_376_p2;
    sc_signal< sc_lv<1> > icmp_ln185_1_fu_386_p2;
    sc_signal< sc_lv<1> > icmp_ln185_2_fu_396_p2;
    sc_signal< sc_lv<1> > icmp_ln185_3_fu_406_p2;
    sc_signal< sc_lv<1> > and_ln185_1_fu_418_p2;
    sc_signal< sc_lv<1> > and_ln185_fu_412_p2;
    sc_signal< sc_lv<16> > add_ln703_1_fu_436_p2;
    sc_signal< sc_lv<16> > add_ln703_fu_430_p2;
    sc_signal< sc_lv<16> > add_ln703_4_fu_454_p2;
    sc_signal< sc_lv<16> > add_ln703_3_fu_448_p2;
    sc_signal< sc_lv<16> > add_ln703_8_fu_472_p2;
    sc_signal< sc_lv<16> > add_ln703_7_fu_466_p2;
    sc_signal< sc_lv<16> > add_ln703_11_fu_490_p2;
    sc_signal< sc_lv<16> > add_ln703_10_fu_484_p2;
    sc_signal< sc_lv<16> > add_ln703_12_fu_496_p2;
    sc_signal< sc_lv<16> > add_ln703_9_fu_478_p2;
    sc_signal< sc_lv<32> > add_ln218_fu_526_p2;
    sc_signal< sc_lv<32> > add_ln213_fu_576_p2;
    sc_signal< sc_lv<16> > add_ln703_6_fu_596_p2;
    sc_signal< sc_lv<16> > sum_V_fu_600_p2;
    sc_signal< sc_lv<17> > sext_ln1148_fu_605_p1;
    sc_signal< sc_lv<17> > sub_ln1148_fu_617_p2;
    sc_signal< sc_lv<13> > tmp_fu_623_p4;
    sc_signal< sc_lv<12> > trunc_ln1148_2_fu_637_p4;
    sc_signal< sc_lv<14> > zext_ln1148_1_fu_633_p1;
    sc_signal< sc_lv<13> > sext_ln1148_1_fu_647_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_609_p3;
    sc_signal< sc_lv<14> > sub_ln1148_1_fu_651_p2;
    sc_signal< sc_lv<14> > zext_ln1148_fu_657_p1;
    sc_signal< sc_lv<14> > res_pack_data_V_fu_661_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_143;
    sc_signal< bool > ap_condition_220;
    sc_signal< bool > ap_condition_814;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<14> ap_const_lv14_3840;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_77;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_10;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln211_fu_564_p2();
    void thread_add_ln213_fu_576_p2();
    void thread_add_ln216_fu_514_p2();
    void thread_add_ln218_fu_526_p2();
    void thread_add_ln233_fu_170_p2();
    void thread_add_ln703_10_fu_484_p2();
    void thread_add_ln703_11_fu_490_p2();
    void thread_add_ln703_12_fu_496_p2();
    void thread_add_ln703_13_fu_502_p2();
    void thread_add_ln703_1_fu_436_p2();
    void thread_add_ln703_2_fu_442_p2();
    void thread_add_ln703_3_fu_448_p2();
    void thread_add_ln703_4_fu_454_p2();
    void thread_add_ln703_5_fu_460_p2();
    void thread_add_ln703_6_fu_596_p2();
    void thread_add_ln703_7_fu_466_p2();
    void thread_add_ln703_8_fu_472_p2();
    void thread_add_ln703_9_fu_478_p2();
    void thread_add_ln703_fu_430_p2();
    void thread_and_ln185_1_fu_418_p2();
    void thread_and_ln185_2_fu_424_p2();
    void thread_and_ln185_fu_412_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp27();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter0_ignore_call18();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter1_ignore_call18();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter2_ignore_call18();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter3_ignore_call18();
    void thread_ap_condition_143();
    void thread_ap_condition_220();
    void thread_ap_condition_814();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_reg_pp0_iter0_storemerge_i_i_reg_130();
    void thread_ap_ready();
    void thread_ap_sig_allocacmp_sY_load();
    void thread_call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ce();
    void thread_call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start();
    void thread_data_V_data_V_blk_n();
    void thread_data_V_data_V_read();
    void thread_icmp_ln185_1_fu_386_p2();
    void thread_icmp_ln185_2_fu_396_p2();
    void thread_icmp_ln185_3_fu_406_p2();
    void thread_icmp_ln185_fu_376_p2();
    void thread_icmp_ln203_fu_508_p2();
    void thread_icmp_ln207_fu_558_p2();
    void thread_icmp_ln233_fu_164_p2();
    void thread_internal_ap_ready();
    void thread_real_start();
    void thread_res_V_data_V_blk_n();
    void thread_res_V_data_V_din();
    void thread_res_V_data_V_write();
    void thread_res_pack_data_V_fu_661_p3();
    void thread_select_ln213_fu_582_p3();
    void thread_select_ln218_fu_532_p3();
    void thread_sext_ln1148_1_fu_647_p1();
    void thread_sext_ln1148_fu_605_p1();
    void thread_start_out();
    void thread_start_write();
    void thread_sub_ln1148_1_fu_651_p2();
    void thread_sub_ln1148_fu_617_p2();
    void thread_sum_V_fu_600_p2();
    void thread_tmp_1_fu_609_p3();
    void thread_tmp_fu_623_p4();
    void thread_trunc_ln1148_2_fu_637_p4();
    void thread_zext_ln1148_1_fu_633_p1();
    void thread_zext_ln1148_fu_657_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
