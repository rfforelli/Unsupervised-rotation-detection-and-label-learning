// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_array_ap_fixed_1u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_V_din,
        res_V_data_V_full_n,
        res_V_data_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [15:0] res_V_data_V_din;
input   res_V_data_V_full_n;
output   res_V_data_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;
reg res_V_data_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX;
reg   [31:0] sX;
reg   [31:0] pY;
reg   [31:0] sY;
reg   [15:0] kernel_data_V_1;
reg   [15:0] kernel_data_V_2;
reg   [15:0] kernel_data_V_3;
reg   [15:0] kernel_data_V_5;
reg   [15:0] kernel_data_V_6;
reg   [15:0] kernel_data_V_7;
reg   [15:0] kernel_data_V_9;
reg   [15:0] kernel_data_V_10;
reg   [15:0] kernel_data_V_11;
reg   [15:0] kernel_data_V_13;
reg   [15:0] kernel_data_V_14;
reg   [15:0] kernel_data_V_15;
reg    data_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln233_reg_680;
reg    res_V_data_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] and_ln185_2_reg_694;
reg   [13:0] indvar_flatten_reg_119;
wire   [0:0] icmp_ln233_fu_164_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln233_reg_680_pp0_iter1_reg;
wire   [13:0] add_ln233_fu_170_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [15:0] tmp_data_0_V_reg_689;
wire   [0:0] and_ln185_2_fu_424_p2;
wire   [15:0] add_ln703_2_fu_442_p2;
reg   [15:0] add_ln703_2_reg_698;
wire   [15:0] add_ln703_5_fu_460_p2;
reg   [15:0] add_ln703_5_reg_703;
wire   [15:0] add_ln703_13_fu_502_p2;
reg   [15:0] add_ln703_13_reg_708;
wire   [0:0] icmp_ln203_fu_508_p2;
reg   [0:0] icmp_ln203_reg_713;
wire   [0:0] icmp_ln207_fu_558_p2;
wire   [31:0] select_ln213_fu_582_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ready;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_0;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_1;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_2;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_3;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_4;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_5;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_6;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_7;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_8;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_9;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_10;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_11;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_12;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_13;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_14;
wire   [15:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_15;
reg    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call18;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call18;
wire    ap_block_state4_pp0_stage0_iter2_ignore_call18;
reg    ap_block_state5_pp0_stage0_iter3_ignore_call18;
reg    ap_block_pp0_stage0_11001_ignoreCallOp27;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter2_storemerge_i_i_reg_130;
reg   [31:0] ap_phi_reg_pp0_iter3_storemerge_i_i_reg_130;
reg    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start_reg;
wire   [31:0] add_ln216_fu_514_p2;
wire   [31:0] select_ln218_fu_532_p3;
wire   [31:0] add_ln211_fu_564_p2;
reg   [31:0] ap_sig_allocacmp_sY_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln185_fu_376_p2;
wire   [0:0] icmp_ln185_1_fu_386_p2;
wire   [0:0] icmp_ln185_2_fu_396_p2;
wire   [0:0] icmp_ln185_3_fu_406_p2;
wire   [0:0] and_ln185_1_fu_418_p2;
wire   [0:0] and_ln185_fu_412_p2;
wire   [15:0] add_ln703_1_fu_436_p2;
wire   [15:0] add_ln703_fu_430_p2;
wire   [15:0] add_ln703_4_fu_454_p2;
wire   [15:0] add_ln703_3_fu_448_p2;
wire   [15:0] add_ln703_8_fu_472_p2;
wire   [15:0] add_ln703_7_fu_466_p2;
wire   [15:0] add_ln703_11_fu_490_p2;
wire   [15:0] add_ln703_10_fu_484_p2;
wire   [15:0] add_ln703_12_fu_496_p2;
wire   [15:0] add_ln703_9_fu_478_p2;
wire   [31:0] add_ln218_fu_526_p2;
wire   [31:0] add_ln213_fu_576_p2;
wire   [15:0] add_ln703_6_fu_596_p2;
wire  signed [15:0] sum_V_fu_600_p2;
wire  signed [16:0] sext_ln1148_fu_605_p1;
wire   [16:0] sub_ln1148_fu_617_p2;
wire   [12:0] tmp_fu_623_p4;
wire   [11:0] trunc_ln1148_2_fu_637_p4;
wire   [13:0] zext_ln1148_1_fu_633_p1;
wire  signed [12:0] sext_ln1148_1_fu_647_p1;
wire   [0:0] tmp_1_fu_609_p3;
wire   [13:0] sub_ln1148_1_fu_651_p2;
wire   [13:0] zext_ln1148_fu_657_p1;
wire   [13:0] res_pack_data_V_fu_661_p3;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_143;
reg    ap_condition_220;
reg    ap_condition_814;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 pX = 32'd0;
#0 sX = 32'd0;
#0 pY = 32'd0;
#0 sY = 32'd0;
#0 kernel_data_V_1 = 16'd0;
#0 kernel_data_V_2 = 16'd0;
#0 kernel_data_V_3 = 16'd0;
#0 kernel_data_V_5 = 16'd0;
#0 kernel_data_V_6 = 16'd0;
#0 kernel_data_V_7 = 16'd0;
#0 kernel_data_V_9 = 16'd0;
#0 kernel_data_V_10 = 16'd0;
#0 kernel_data_V_11 = 16'd0;
#0 kernel_data_V_13 = 16'd0;
#0 kernel_data_V_14 = 16'd0;
#0 kernel_data_V_15 = 16'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start_reg = 1'b0;
end

shift_line_buffer_array_ap_fixed_1u_config2_s call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ready),
    .in_elem_data_V_read(tmp_data_0_V_reg_689),
    .kernel_window_1_V_read(kernel_data_V_1),
    .kernel_window_2_V_read(kernel_data_V_2),
    .kernel_window_3_V_read(kernel_data_V_3),
    .kernel_window_5_V_read(kernel_data_V_5),
    .kernel_window_6_V_read(kernel_data_V_6),
    .kernel_window_7_V_read(kernel_data_V_7),
    .kernel_window_9_V_read(kernel_data_V_9),
    .kernel_window_10_V_read(kernel_data_V_10),
    .kernel_window_11_V_read(kernel_data_V_11),
    .kernel_window_13_V_read(kernel_data_V_13),
    .kernel_window_14_V_read(kernel_data_V_14),
    .kernel_window_15_V_read(kernel_data_V_15),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_8),
    .ap_return_9(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_9),
    .ap_return_10(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_10),
    .ap_return_11(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_11),
    .ap_return_12(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_12),
    .ap_return_13(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_13),
    .ap_return_14(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_14),
    .ap_return_15(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_15),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln233_reg_680 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((1'b1 == ap_condition_220)) begin
            ap_phi_reg_pp0_iter3_storemerge_i_i_reg_130 <= 32'd0;
        end else if ((1'b1 == ap_condition_143)) begin
            ap_phi_reg_pp0_iter3_storemerge_i_i_reg_130 <= select_ln213_fu_582_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_storemerge_i_i_reg_130 <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_130;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_164_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_119 <= add_ln233_fu_170_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_119 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((icmp_ln203_fu_508_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln203_fu_508_p2 == 1'd0)) begin
            pX <= add_ln216_fu_514_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_814)) begin
        if ((icmp_ln207_fu_558_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln207_fu_558_p2 == 1'd0)) begin
            pY <= add_ln211_fu_564_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((icmp_ln203_fu_508_p2 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln203_fu_508_p2 == 1'd0)) begin
            sX <= select_ln218_fu_532_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln185_2_fu_424_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_13_reg_708 <= add_ln703_13_fu_502_p2;
        add_ln703_2_reg_698 <= add_ln703_2_fu_442_p2;
        add_ln703_5_reg_703 <= add_ln703_5_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_reg_680_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln185_2_reg_694 <= and_ln185_2_fu_424_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_130 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_130;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_storemerge_i_i_reg_130 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_130;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln203_reg_713 <= icmp_ln203_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln233_reg_680 <= icmp_ln233_fu_164_p2;
        icmp_ln233_reg_680_pp0_iter1_reg <= icmp_ln233_reg_680;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_reg_680_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_1 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_4;
        kernel_data_V_10 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_11;
        kernel_data_V_11 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_12;
        kernel_data_V_13 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_13;
        kernel_data_V_14 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_14;
        kernel_data_V_15 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_15;
        kernel_data_V_2 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_5;
        kernel_data_V_3 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_6;
        kernel_data_V_5 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_7;
        kernel_data_V_6 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_8;
        kernel_data_V_7 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_9;
        kernel_data_V_9 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_10;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln203_reg_713 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sY <= ap_phi_reg_pp0_iter3_storemerge_i_i_reg_130;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_reg_680 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_data_0_V_reg_689 <= data_V_data_V_dout;
    end
end

always @ (*) begin
    if ((icmp_ln233_fu_164_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln203_reg_713 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_sY_load = ap_phi_reg_pp0_iter3_storemerge_i_i_reg_130;
    end else begin
        ap_sig_allocacmp_sY_load = sY;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp27) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_680 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln233_reg_680 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_694) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_V_blk_n = res_V_data_V_full_n;
    end else begin
        res_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln185_2_reg_694) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_V_write = 1'b1;
    end else begin
        res_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln233_fu_164_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln233_fu_164_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln211_fu_564_p2 = (pY + 32'd1);

assign add_ln213_fu_576_p2 = (ap_sig_allocacmp_sY_load + 32'd1);

assign add_ln216_fu_514_p2 = (pX + 32'd1);

assign add_ln218_fu_526_p2 = (sX + 32'd1);

assign add_ln233_fu_170_p2 = (indvar_flatten_reg_119 + 14'd1);

assign add_ln703_10_fu_484_p2 = (call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_4 + call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_0);

assign add_ln703_11_fu_490_p2 = (call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_6 + call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_5);

assign add_ln703_12_fu_496_p2 = (add_ln703_11_fu_490_p2 + add_ln703_10_fu_484_p2);

assign add_ln703_13_fu_502_p2 = (add_ln703_12_fu_496_p2 + add_ln703_9_fu_478_p2);

assign add_ln703_1_fu_436_p2 = (call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_10 + call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_2);

assign add_ln703_2_fu_442_p2 = (add_ln703_1_fu_436_p2 + add_ln703_fu_430_p2);

assign add_ln703_3_fu_448_p2 = (call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_14 + call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_15);

assign add_ln703_4_fu_454_p2 = (call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_13 + call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_3);

assign add_ln703_5_fu_460_p2 = (add_ln703_4_fu_454_p2 + add_ln703_3_fu_448_p2);

assign add_ln703_6_fu_596_p2 = (add_ln703_5_reg_703 + add_ln703_2_reg_698);

assign add_ln703_7_fu_466_p2 = (call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_8 + call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_9);

assign add_ln703_8_fu_472_p2 = (call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_7 + call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_1);

assign add_ln703_9_fu_478_p2 = (add_ln703_8_fu_472_p2 + add_ln703_7_fu_466_p2);

assign add_ln703_fu_430_p2 = (call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_11 + call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_return_12);

assign and_ln185_1_fu_418_p2 = (icmp_ln185_3_fu_406_p2 & icmp_ln185_2_fu_396_p2);

assign and_ln185_2_fu_424_p2 = (and_ln185_fu_412_p2 & and_ln185_1_fu_418_p2);

assign and_ln185_fu_412_p2 = (icmp_ln185_fu_376_p2 & icmp_ln185_1_fu_386_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln185_2_reg_694) & (res_V_data_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln233_reg_680 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln185_2_reg_694) & (res_V_data_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln233_reg_680 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp27 = (((1'd1 == and_ln185_2_reg_694) & (res_V_data_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln233_reg_680 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln185_2_reg_694) & (res_V_data_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln233_reg_680 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln233_reg_680 == 1'd0) & (data_V_data_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call18 = ((icmp_ln233_reg_680 == 1'd0) & (data_V_data_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2_ignore_call18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((1'd1 == and_ln185_2_reg_694) & (res_V_data_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3_ignore_call18 = ((1'd1 == and_ln185_2_reg_694) & (res_V_data_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_143 = ((icmp_ln203_fu_508_p2 == 1'd1) & (icmp_ln207_fu_558_p2 == 1'd0) & (icmp_ln233_reg_680_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_220 = ((icmp_ln207_fu_558_p2 == 1'd1) & (icmp_ln203_fu_508_p2 == 1'd1) & (icmp_ln233_reg_680_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_814 = ((icmp_ln203_fu_508_p2 == 1'd1) & (icmp_ln233_reg_680_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_130 = 'bx;

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start = call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_141_ap_start_reg;

assign icmp_ln185_1_fu_386_p2 = ((ap_sig_allocacmp_sY_load == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln185_2_fu_396_p2 = (($signed(pY) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln185_3_fu_406_p2 = (($signed(pX) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_376_p2 = ((sX == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_508_p2 = ((pX == 32'd119) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_558_p2 = ((pY == 32'd119) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_164_p2 = ((indvar_flatten_reg_119 == 14'd14400) ? 1'b1 : 1'b0);

assign res_V_data_V_din = $signed(res_pack_data_V_fu_661_p3);

assign res_pack_data_V_fu_661_p3 = ((tmp_1_fu_609_p3[0:0] === 1'b1) ? sub_ln1148_1_fu_651_p2 : zext_ln1148_fu_657_p1);

assign select_ln213_fu_582_p3 = ((icmp_ln185_1_fu_386_p2[0:0] === 1'b1) ? 32'd0 : add_ln213_fu_576_p2);

assign select_ln218_fu_532_p3 = ((icmp_ln185_fu_376_p2[0:0] === 1'b1) ? 32'd0 : add_ln218_fu_526_p2);

assign sext_ln1148_1_fu_647_p1 = $signed(trunc_ln1148_2_fu_637_p4);

assign sext_ln1148_fu_605_p1 = sum_V_fu_600_p2;

assign start_out = real_start;

assign sub_ln1148_1_fu_651_p2 = (14'd0 - zext_ln1148_1_fu_633_p1);

assign sub_ln1148_fu_617_p2 = ($signed(17'd0) - $signed(sext_ln1148_fu_605_p1));

assign sum_V_fu_600_p2 = (add_ln703_13_reg_708 + add_ln703_6_fu_596_p2);

assign tmp_1_fu_609_p3 = sum_V_fu_600_p2[32'd15];

assign tmp_fu_623_p4 = {{sub_ln1148_fu_617_p2[16:4]}};

assign trunc_ln1148_2_fu_637_p4 = {{sum_V_fu_600_p2[15:4]}};

assign zext_ln1148_1_fu_633_p1 = tmp_fu_623_p4;

assign zext_ln1148_fu_657_p1 = $unsigned(sext_ln1148_1_fu_647_p1);

endmodule //pooling2d_cl_array_array_ap_fixed_1u_config2_s
