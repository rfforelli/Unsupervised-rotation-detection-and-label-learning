// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu_array_array_ap_ufixed_16u_relu_config15_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu_array_array_ap_ufixed_16u_relu_config15_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic relu_array_array_ap_ufixed_16u_relu_config15_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> relu_array_array_ap_ufixed_16u_relu_config15_s::ap_ST_fsm_state1 = "1";
const sc_lv<32> relu_array_array_ap_ufixed_16u_relu_config15_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<16> relu_array_array_ap_ufixed_16u_relu_config15_s::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> relu_array_array_ap_ufixed_16u_relu_config15_s::ap_const_lv32_1 = "1";
const sc_lv<32> relu_array_array_ap_ufixed_16u_relu_config15_s::ap_const_lv32_C = "1100";
const sc_lv<12> relu_array_array_ap_ufixed_16u_relu_config15_s::ap_const_lv12_0 = "000000000000";
const bool relu_array_array_ap_ufixed_16u_relu_config15_s::ap_const_boolean_1 = true;

relu_array_array_ap_ufixed_16u_relu_config15_s::relu_array_array_ap_ufixed_16u_relu_config15_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_ap_done);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_data_V_data_0_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_0_V_empty_n );

    SC_METHOD(thread_data_V_data_0_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_10_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_10_V_empty_n );

    SC_METHOD(thread_data_V_data_10_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_11_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_11_V_empty_n );

    SC_METHOD(thread_data_V_data_11_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_12_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_12_V_empty_n );

    SC_METHOD(thread_data_V_data_12_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_13_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_13_V_empty_n );

    SC_METHOD(thread_data_V_data_13_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_14_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_14_V_empty_n );

    SC_METHOD(thread_data_V_data_14_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_15_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_15_V_empty_n );

    SC_METHOD(thread_data_V_data_15_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_1_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_1_V_empty_n );

    SC_METHOD(thread_data_V_data_1_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_2_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_2_V_empty_n );

    SC_METHOD(thread_data_V_data_2_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_3_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_3_V_empty_n );

    SC_METHOD(thread_data_V_data_3_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_4_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_4_V_empty_n );

    SC_METHOD(thread_data_V_data_4_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_5_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_5_V_empty_n );

    SC_METHOD(thread_data_V_data_5_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_6_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_6_V_empty_n );

    SC_METHOD(thread_data_V_data_6_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_7_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_7_V_empty_n );

    SC_METHOD(thread_data_V_data_7_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_8_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_8_V_empty_n );

    SC_METHOD(thread_data_V_data_8_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_data_V_data_9_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_9_V_empty_n );

    SC_METHOD(thread_data_V_data_9_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_10_fu_416_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_10_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_11_fu_432_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_11_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_12_fu_448_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_12_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_13_fu_464_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_13_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_14_fu_480_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_14_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_15_fu_496_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_15_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_1_fu_272_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_1_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_2_fu_288_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_2_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_3_fu_304_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_3_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_4_fu_320_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_4_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_5_fu_336_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_5_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_6_fu_352_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_6_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_7_fu_368_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_7_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_8_fu_384_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_8_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_9_fu_400_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_9_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_icmp_ln1494_fu_256_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_V_data_0_V_dout );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_io_acc_block_signal_op102);
    sensitive << ( res_V_data_0_V_full_n );
    sensitive << ( res_V_data_1_V_full_n );
    sensitive << ( res_V_data_2_V_full_n );
    sensitive << ( res_V_data_3_V_full_n );
    sensitive << ( res_V_data_4_V_full_n );
    sensitive << ( res_V_data_5_V_full_n );
    sensitive << ( res_V_data_6_V_full_n );
    sensitive << ( res_V_data_7_V_full_n );
    sensitive << ( res_V_data_8_V_full_n );
    sensitive << ( res_V_data_9_V_full_n );
    sensitive << ( res_V_data_10_V_full_n );
    sensitive << ( res_V_data_11_V_full_n );
    sensitive << ( res_V_data_12_V_full_n );
    sensitive << ( res_V_data_13_V_full_n );
    sensitive << ( res_V_data_14_V_full_n );
    sensitive << ( res_V_data_15_V_full_n );

    SC_METHOD(thread_io_acc_block_signal_op37);
    sensitive << ( data_V_data_0_V_empty_n );
    sensitive << ( data_V_data_1_V_empty_n );
    sensitive << ( data_V_data_2_V_empty_n );
    sensitive << ( data_V_data_3_V_empty_n );
    sensitive << ( data_V_data_4_V_empty_n );
    sensitive << ( data_V_data_5_V_empty_n );
    sensitive << ( data_V_data_6_V_empty_n );
    sensitive << ( data_V_data_7_V_empty_n );
    sensitive << ( data_V_data_8_V_empty_n );
    sensitive << ( data_V_data_9_V_empty_n );
    sensitive << ( data_V_data_10_V_empty_n );
    sensitive << ( data_V_data_11_V_empty_n );
    sensitive << ( data_V_data_12_V_empty_n );
    sensitive << ( data_V_data_13_V_empty_n );
    sensitive << ( data_V_data_14_V_empty_n );
    sensitive << ( data_V_data_15_V_empty_n );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_res_V_data_0_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_0_V_full_n );

    SC_METHOD(thread_res_V_data_0_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_fu_256_p2 );
    sensitive << ( trunc_ln_fu_262_p4 );

    SC_METHOD(thread_res_V_data_0_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_10_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_10_V_full_n );

    SC_METHOD(thread_res_V_data_10_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_10_fu_416_p2 );
    sensitive << ( trunc_ln708_10_fu_422_p4 );

    SC_METHOD(thread_res_V_data_10_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_11_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_11_V_full_n );

    SC_METHOD(thread_res_V_data_11_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_11_fu_432_p2 );
    sensitive << ( trunc_ln708_11_fu_438_p4 );

    SC_METHOD(thread_res_V_data_11_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_12_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_12_V_full_n );

    SC_METHOD(thread_res_V_data_12_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_12_fu_448_p2 );
    sensitive << ( trunc_ln708_12_fu_454_p4 );

    SC_METHOD(thread_res_V_data_12_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_13_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_13_V_full_n );

    SC_METHOD(thread_res_V_data_13_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_13_fu_464_p2 );
    sensitive << ( trunc_ln708_13_fu_470_p4 );

    SC_METHOD(thread_res_V_data_13_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_14_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_14_V_full_n );

    SC_METHOD(thread_res_V_data_14_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_14_fu_480_p2 );
    sensitive << ( trunc_ln708_14_fu_486_p4 );

    SC_METHOD(thread_res_V_data_14_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_15_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_15_V_full_n );

    SC_METHOD(thread_res_V_data_15_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_15_fu_496_p2 );
    sensitive << ( trunc_ln708_15_fu_502_p4 );

    SC_METHOD(thread_res_V_data_15_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_1_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_1_V_full_n );

    SC_METHOD(thread_res_V_data_1_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_1_fu_272_p2 );
    sensitive << ( trunc_ln708_1_fu_278_p4 );

    SC_METHOD(thread_res_V_data_1_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_2_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_2_V_full_n );

    SC_METHOD(thread_res_V_data_2_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_2_fu_288_p2 );
    sensitive << ( trunc_ln708_2_fu_294_p4 );

    SC_METHOD(thread_res_V_data_2_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_3_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_3_V_full_n );

    SC_METHOD(thread_res_V_data_3_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_3_fu_304_p2 );
    sensitive << ( trunc_ln708_3_fu_310_p4 );

    SC_METHOD(thread_res_V_data_3_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_4_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_4_V_full_n );

    SC_METHOD(thread_res_V_data_4_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_4_fu_320_p2 );
    sensitive << ( trunc_ln708_4_fu_326_p4 );

    SC_METHOD(thread_res_V_data_4_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_5_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_5_V_full_n );

    SC_METHOD(thread_res_V_data_5_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_5_fu_336_p2 );
    sensitive << ( trunc_ln708_5_fu_342_p4 );

    SC_METHOD(thread_res_V_data_5_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_6_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_6_V_full_n );

    SC_METHOD(thread_res_V_data_6_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_6_fu_352_p2 );
    sensitive << ( trunc_ln708_6_fu_358_p4 );

    SC_METHOD(thread_res_V_data_6_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_7_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_7_V_full_n );

    SC_METHOD(thread_res_V_data_7_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_7_fu_368_p2 );
    sensitive << ( trunc_ln708_7_fu_374_p4 );

    SC_METHOD(thread_res_V_data_7_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_8_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_8_V_full_n );

    SC_METHOD(thread_res_V_data_8_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_8_fu_384_p2 );
    sensitive << ( trunc_ln708_8_fu_390_p4 );

    SC_METHOD(thread_res_V_data_8_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_res_V_data_9_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( res_V_data_9_V_full_n );

    SC_METHOD(thread_res_V_data_9_V_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );
    sensitive << ( icmp_ln1494_9_fu_400_p2 );
    sensitive << ( trunc_ln708_9_fu_406_p4 );

    SC_METHOD(thread_res_V_data_9_V_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_trunc_ln708_10_fu_422_p4);
    sensitive << ( data_V_data_10_V_dout );

    SC_METHOD(thread_trunc_ln708_11_fu_438_p4);
    sensitive << ( data_V_data_11_V_dout );

    SC_METHOD(thread_trunc_ln708_12_fu_454_p4);
    sensitive << ( data_V_data_12_V_dout );

    SC_METHOD(thread_trunc_ln708_13_fu_470_p4);
    sensitive << ( data_V_data_13_V_dout );

    SC_METHOD(thread_trunc_ln708_14_fu_486_p4);
    sensitive << ( data_V_data_14_V_dout );

    SC_METHOD(thread_trunc_ln708_15_fu_502_p4);
    sensitive << ( data_V_data_15_V_dout );

    SC_METHOD(thread_trunc_ln708_1_fu_278_p4);
    sensitive << ( data_V_data_1_V_dout );

    SC_METHOD(thread_trunc_ln708_2_fu_294_p4);
    sensitive << ( data_V_data_2_V_dout );

    SC_METHOD(thread_trunc_ln708_3_fu_310_p4);
    sensitive << ( data_V_data_3_V_dout );

    SC_METHOD(thread_trunc_ln708_4_fu_326_p4);
    sensitive << ( data_V_data_4_V_dout );

    SC_METHOD(thread_trunc_ln708_5_fu_342_p4);
    sensitive << ( data_V_data_5_V_dout );

    SC_METHOD(thread_trunc_ln708_6_fu_358_p4);
    sensitive << ( data_V_data_6_V_dout );

    SC_METHOD(thread_trunc_ln708_7_fu_374_p4);
    sensitive << ( data_V_data_7_V_dout );

    SC_METHOD(thread_trunc_ln708_8_fu_390_p4);
    sensitive << ( data_V_data_8_V_dout );

    SC_METHOD(thread_trunc_ln708_9_fu_406_p4);
    sensitive << ( data_V_data_9_V_dout );

    SC_METHOD(thread_trunc_ln_fu_262_p4);
    sensitive << ( data_V_data_0_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( io_acc_block_signal_op37 );
    sensitive << ( io_acc_block_signal_op102 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_array_array_ap_ufixed_16u_relu_config15_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, data_V_data_0_V_dout, "(port)data_V_data_0_V_dout");
    sc_trace(mVcdFile, data_V_data_0_V_empty_n, "(port)data_V_data_0_V_empty_n");
    sc_trace(mVcdFile, data_V_data_0_V_read, "(port)data_V_data_0_V_read");
    sc_trace(mVcdFile, data_V_data_1_V_dout, "(port)data_V_data_1_V_dout");
    sc_trace(mVcdFile, data_V_data_1_V_empty_n, "(port)data_V_data_1_V_empty_n");
    sc_trace(mVcdFile, data_V_data_1_V_read, "(port)data_V_data_1_V_read");
    sc_trace(mVcdFile, data_V_data_2_V_dout, "(port)data_V_data_2_V_dout");
    sc_trace(mVcdFile, data_V_data_2_V_empty_n, "(port)data_V_data_2_V_empty_n");
    sc_trace(mVcdFile, data_V_data_2_V_read, "(port)data_V_data_2_V_read");
    sc_trace(mVcdFile, data_V_data_3_V_dout, "(port)data_V_data_3_V_dout");
    sc_trace(mVcdFile, data_V_data_3_V_empty_n, "(port)data_V_data_3_V_empty_n");
    sc_trace(mVcdFile, data_V_data_3_V_read, "(port)data_V_data_3_V_read");
    sc_trace(mVcdFile, data_V_data_4_V_dout, "(port)data_V_data_4_V_dout");
    sc_trace(mVcdFile, data_V_data_4_V_empty_n, "(port)data_V_data_4_V_empty_n");
    sc_trace(mVcdFile, data_V_data_4_V_read, "(port)data_V_data_4_V_read");
    sc_trace(mVcdFile, data_V_data_5_V_dout, "(port)data_V_data_5_V_dout");
    sc_trace(mVcdFile, data_V_data_5_V_empty_n, "(port)data_V_data_5_V_empty_n");
    sc_trace(mVcdFile, data_V_data_5_V_read, "(port)data_V_data_5_V_read");
    sc_trace(mVcdFile, data_V_data_6_V_dout, "(port)data_V_data_6_V_dout");
    sc_trace(mVcdFile, data_V_data_6_V_empty_n, "(port)data_V_data_6_V_empty_n");
    sc_trace(mVcdFile, data_V_data_6_V_read, "(port)data_V_data_6_V_read");
    sc_trace(mVcdFile, data_V_data_7_V_dout, "(port)data_V_data_7_V_dout");
    sc_trace(mVcdFile, data_V_data_7_V_empty_n, "(port)data_V_data_7_V_empty_n");
    sc_trace(mVcdFile, data_V_data_7_V_read, "(port)data_V_data_7_V_read");
    sc_trace(mVcdFile, data_V_data_8_V_dout, "(port)data_V_data_8_V_dout");
    sc_trace(mVcdFile, data_V_data_8_V_empty_n, "(port)data_V_data_8_V_empty_n");
    sc_trace(mVcdFile, data_V_data_8_V_read, "(port)data_V_data_8_V_read");
    sc_trace(mVcdFile, data_V_data_9_V_dout, "(port)data_V_data_9_V_dout");
    sc_trace(mVcdFile, data_V_data_9_V_empty_n, "(port)data_V_data_9_V_empty_n");
    sc_trace(mVcdFile, data_V_data_9_V_read, "(port)data_V_data_9_V_read");
    sc_trace(mVcdFile, data_V_data_10_V_dout, "(port)data_V_data_10_V_dout");
    sc_trace(mVcdFile, data_V_data_10_V_empty_n, "(port)data_V_data_10_V_empty_n");
    sc_trace(mVcdFile, data_V_data_10_V_read, "(port)data_V_data_10_V_read");
    sc_trace(mVcdFile, data_V_data_11_V_dout, "(port)data_V_data_11_V_dout");
    sc_trace(mVcdFile, data_V_data_11_V_empty_n, "(port)data_V_data_11_V_empty_n");
    sc_trace(mVcdFile, data_V_data_11_V_read, "(port)data_V_data_11_V_read");
    sc_trace(mVcdFile, data_V_data_12_V_dout, "(port)data_V_data_12_V_dout");
    sc_trace(mVcdFile, data_V_data_12_V_empty_n, "(port)data_V_data_12_V_empty_n");
    sc_trace(mVcdFile, data_V_data_12_V_read, "(port)data_V_data_12_V_read");
    sc_trace(mVcdFile, data_V_data_13_V_dout, "(port)data_V_data_13_V_dout");
    sc_trace(mVcdFile, data_V_data_13_V_empty_n, "(port)data_V_data_13_V_empty_n");
    sc_trace(mVcdFile, data_V_data_13_V_read, "(port)data_V_data_13_V_read");
    sc_trace(mVcdFile, data_V_data_14_V_dout, "(port)data_V_data_14_V_dout");
    sc_trace(mVcdFile, data_V_data_14_V_empty_n, "(port)data_V_data_14_V_empty_n");
    sc_trace(mVcdFile, data_V_data_14_V_read, "(port)data_V_data_14_V_read");
    sc_trace(mVcdFile, data_V_data_15_V_dout, "(port)data_V_data_15_V_dout");
    sc_trace(mVcdFile, data_V_data_15_V_empty_n, "(port)data_V_data_15_V_empty_n");
    sc_trace(mVcdFile, data_V_data_15_V_read, "(port)data_V_data_15_V_read");
    sc_trace(mVcdFile, res_V_data_0_V_din, "(port)res_V_data_0_V_din");
    sc_trace(mVcdFile, res_V_data_0_V_full_n, "(port)res_V_data_0_V_full_n");
    sc_trace(mVcdFile, res_V_data_0_V_write, "(port)res_V_data_0_V_write");
    sc_trace(mVcdFile, res_V_data_1_V_din, "(port)res_V_data_1_V_din");
    sc_trace(mVcdFile, res_V_data_1_V_full_n, "(port)res_V_data_1_V_full_n");
    sc_trace(mVcdFile, res_V_data_1_V_write, "(port)res_V_data_1_V_write");
    sc_trace(mVcdFile, res_V_data_2_V_din, "(port)res_V_data_2_V_din");
    sc_trace(mVcdFile, res_V_data_2_V_full_n, "(port)res_V_data_2_V_full_n");
    sc_trace(mVcdFile, res_V_data_2_V_write, "(port)res_V_data_2_V_write");
    sc_trace(mVcdFile, res_V_data_3_V_din, "(port)res_V_data_3_V_din");
    sc_trace(mVcdFile, res_V_data_3_V_full_n, "(port)res_V_data_3_V_full_n");
    sc_trace(mVcdFile, res_V_data_3_V_write, "(port)res_V_data_3_V_write");
    sc_trace(mVcdFile, res_V_data_4_V_din, "(port)res_V_data_4_V_din");
    sc_trace(mVcdFile, res_V_data_4_V_full_n, "(port)res_V_data_4_V_full_n");
    sc_trace(mVcdFile, res_V_data_4_V_write, "(port)res_V_data_4_V_write");
    sc_trace(mVcdFile, res_V_data_5_V_din, "(port)res_V_data_5_V_din");
    sc_trace(mVcdFile, res_V_data_5_V_full_n, "(port)res_V_data_5_V_full_n");
    sc_trace(mVcdFile, res_V_data_5_V_write, "(port)res_V_data_5_V_write");
    sc_trace(mVcdFile, res_V_data_6_V_din, "(port)res_V_data_6_V_din");
    sc_trace(mVcdFile, res_V_data_6_V_full_n, "(port)res_V_data_6_V_full_n");
    sc_trace(mVcdFile, res_V_data_6_V_write, "(port)res_V_data_6_V_write");
    sc_trace(mVcdFile, res_V_data_7_V_din, "(port)res_V_data_7_V_din");
    sc_trace(mVcdFile, res_V_data_7_V_full_n, "(port)res_V_data_7_V_full_n");
    sc_trace(mVcdFile, res_V_data_7_V_write, "(port)res_V_data_7_V_write");
    sc_trace(mVcdFile, res_V_data_8_V_din, "(port)res_V_data_8_V_din");
    sc_trace(mVcdFile, res_V_data_8_V_full_n, "(port)res_V_data_8_V_full_n");
    sc_trace(mVcdFile, res_V_data_8_V_write, "(port)res_V_data_8_V_write");
    sc_trace(mVcdFile, res_V_data_9_V_din, "(port)res_V_data_9_V_din");
    sc_trace(mVcdFile, res_V_data_9_V_full_n, "(port)res_V_data_9_V_full_n");
    sc_trace(mVcdFile, res_V_data_9_V_write, "(port)res_V_data_9_V_write");
    sc_trace(mVcdFile, res_V_data_10_V_din, "(port)res_V_data_10_V_din");
    sc_trace(mVcdFile, res_V_data_10_V_full_n, "(port)res_V_data_10_V_full_n");
    sc_trace(mVcdFile, res_V_data_10_V_write, "(port)res_V_data_10_V_write");
    sc_trace(mVcdFile, res_V_data_11_V_din, "(port)res_V_data_11_V_din");
    sc_trace(mVcdFile, res_V_data_11_V_full_n, "(port)res_V_data_11_V_full_n");
    sc_trace(mVcdFile, res_V_data_11_V_write, "(port)res_V_data_11_V_write");
    sc_trace(mVcdFile, res_V_data_12_V_din, "(port)res_V_data_12_V_din");
    sc_trace(mVcdFile, res_V_data_12_V_full_n, "(port)res_V_data_12_V_full_n");
    sc_trace(mVcdFile, res_V_data_12_V_write, "(port)res_V_data_12_V_write");
    sc_trace(mVcdFile, res_V_data_13_V_din, "(port)res_V_data_13_V_din");
    sc_trace(mVcdFile, res_V_data_13_V_full_n, "(port)res_V_data_13_V_full_n");
    sc_trace(mVcdFile, res_V_data_13_V_write, "(port)res_V_data_13_V_write");
    sc_trace(mVcdFile, res_V_data_14_V_din, "(port)res_V_data_14_V_din");
    sc_trace(mVcdFile, res_V_data_14_V_full_n, "(port)res_V_data_14_V_full_n");
    sc_trace(mVcdFile, res_V_data_14_V_write, "(port)res_V_data_14_V_write");
    sc_trace(mVcdFile, res_V_data_15_V_din, "(port)res_V_data_15_V_din");
    sc_trace(mVcdFile, res_V_data_15_V_full_n, "(port)res_V_data_15_V_full_n");
    sc_trace(mVcdFile, res_V_data_15_V_write, "(port)res_V_data_15_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, data_V_data_0_V_blk_n, "data_V_data_0_V_blk_n");
    sc_trace(mVcdFile, data_V_data_1_V_blk_n, "data_V_data_1_V_blk_n");
    sc_trace(mVcdFile, data_V_data_2_V_blk_n, "data_V_data_2_V_blk_n");
    sc_trace(mVcdFile, data_V_data_3_V_blk_n, "data_V_data_3_V_blk_n");
    sc_trace(mVcdFile, data_V_data_4_V_blk_n, "data_V_data_4_V_blk_n");
    sc_trace(mVcdFile, data_V_data_5_V_blk_n, "data_V_data_5_V_blk_n");
    sc_trace(mVcdFile, data_V_data_6_V_blk_n, "data_V_data_6_V_blk_n");
    sc_trace(mVcdFile, data_V_data_7_V_blk_n, "data_V_data_7_V_blk_n");
    sc_trace(mVcdFile, data_V_data_8_V_blk_n, "data_V_data_8_V_blk_n");
    sc_trace(mVcdFile, data_V_data_9_V_blk_n, "data_V_data_9_V_blk_n");
    sc_trace(mVcdFile, data_V_data_10_V_blk_n, "data_V_data_10_V_blk_n");
    sc_trace(mVcdFile, data_V_data_11_V_blk_n, "data_V_data_11_V_blk_n");
    sc_trace(mVcdFile, data_V_data_12_V_blk_n, "data_V_data_12_V_blk_n");
    sc_trace(mVcdFile, data_V_data_13_V_blk_n, "data_V_data_13_V_blk_n");
    sc_trace(mVcdFile, data_V_data_14_V_blk_n, "data_V_data_14_V_blk_n");
    sc_trace(mVcdFile, data_V_data_15_V_blk_n, "data_V_data_15_V_blk_n");
    sc_trace(mVcdFile, res_V_data_0_V_blk_n, "res_V_data_0_V_blk_n");
    sc_trace(mVcdFile, res_V_data_1_V_blk_n, "res_V_data_1_V_blk_n");
    sc_trace(mVcdFile, res_V_data_2_V_blk_n, "res_V_data_2_V_blk_n");
    sc_trace(mVcdFile, res_V_data_3_V_blk_n, "res_V_data_3_V_blk_n");
    sc_trace(mVcdFile, res_V_data_4_V_blk_n, "res_V_data_4_V_blk_n");
    sc_trace(mVcdFile, res_V_data_5_V_blk_n, "res_V_data_5_V_blk_n");
    sc_trace(mVcdFile, res_V_data_6_V_blk_n, "res_V_data_6_V_blk_n");
    sc_trace(mVcdFile, res_V_data_7_V_blk_n, "res_V_data_7_V_blk_n");
    sc_trace(mVcdFile, res_V_data_8_V_blk_n, "res_V_data_8_V_blk_n");
    sc_trace(mVcdFile, res_V_data_9_V_blk_n, "res_V_data_9_V_blk_n");
    sc_trace(mVcdFile, res_V_data_10_V_blk_n, "res_V_data_10_V_blk_n");
    sc_trace(mVcdFile, res_V_data_11_V_blk_n, "res_V_data_11_V_blk_n");
    sc_trace(mVcdFile, res_V_data_12_V_blk_n, "res_V_data_12_V_blk_n");
    sc_trace(mVcdFile, res_V_data_13_V_blk_n, "res_V_data_13_V_blk_n");
    sc_trace(mVcdFile, res_V_data_14_V_blk_n, "res_V_data_14_V_blk_n");
    sc_trace(mVcdFile, res_V_data_15_V_blk_n, "res_V_data_15_V_blk_n");
    sc_trace(mVcdFile, io_acc_block_signal_op37, "io_acc_block_signal_op37");
    sc_trace(mVcdFile, io_acc_block_signal_op102, "io_acc_block_signal_op102");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln1494_fu_256_p2, "icmp_ln1494_fu_256_p2");
    sc_trace(mVcdFile, trunc_ln_fu_262_p4, "trunc_ln_fu_262_p4");
    sc_trace(mVcdFile, icmp_ln1494_1_fu_272_p2, "icmp_ln1494_1_fu_272_p2");
    sc_trace(mVcdFile, trunc_ln708_1_fu_278_p4, "trunc_ln708_1_fu_278_p4");
    sc_trace(mVcdFile, icmp_ln1494_2_fu_288_p2, "icmp_ln1494_2_fu_288_p2");
    sc_trace(mVcdFile, trunc_ln708_2_fu_294_p4, "trunc_ln708_2_fu_294_p4");
    sc_trace(mVcdFile, icmp_ln1494_3_fu_304_p2, "icmp_ln1494_3_fu_304_p2");
    sc_trace(mVcdFile, trunc_ln708_3_fu_310_p4, "trunc_ln708_3_fu_310_p4");
    sc_trace(mVcdFile, icmp_ln1494_4_fu_320_p2, "icmp_ln1494_4_fu_320_p2");
    sc_trace(mVcdFile, trunc_ln708_4_fu_326_p4, "trunc_ln708_4_fu_326_p4");
    sc_trace(mVcdFile, icmp_ln1494_5_fu_336_p2, "icmp_ln1494_5_fu_336_p2");
    sc_trace(mVcdFile, trunc_ln708_5_fu_342_p4, "trunc_ln708_5_fu_342_p4");
    sc_trace(mVcdFile, icmp_ln1494_6_fu_352_p2, "icmp_ln1494_6_fu_352_p2");
    sc_trace(mVcdFile, trunc_ln708_6_fu_358_p4, "trunc_ln708_6_fu_358_p4");
    sc_trace(mVcdFile, icmp_ln1494_7_fu_368_p2, "icmp_ln1494_7_fu_368_p2");
    sc_trace(mVcdFile, trunc_ln708_7_fu_374_p4, "trunc_ln708_7_fu_374_p4");
    sc_trace(mVcdFile, icmp_ln1494_8_fu_384_p2, "icmp_ln1494_8_fu_384_p2");
    sc_trace(mVcdFile, trunc_ln708_8_fu_390_p4, "trunc_ln708_8_fu_390_p4");
    sc_trace(mVcdFile, icmp_ln1494_9_fu_400_p2, "icmp_ln1494_9_fu_400_p2");
    sc_trace(mVcdFile, trunc_ln708_9_fu_406_p4, "trunc_ln708_9_fu_406_p4");
    sc_trace(mVcdFile, icmp_ln1494_10_fu_416_p2, "icmp_ln1494_10_fu_416_p2");
    sc_trace(mVcdFile, trunc_ln708_10_fu_422_p4, "trunc_ln708_10_fu_422_p4");
    sc_trace(mVcdFile, icmp_ln1494_11_fu_432_p2, "icmp_ln1494_11_fu_432_p2");
    sc_trace(mVcdFile, trunc_ln708_11_fu_438_p4, "trunc_ln708_11_fu_438_p4");
    sc_trace(mVcdFile, icmp_ln1494_12_fu_448_p2, "icmp_ln1494_12_fu_448_p2");
    sc_trace(mVcdFile, trunc_ln708_12_fu_454_p4, "trunc_ln708_12_fu_454_p4");
    sc_trace(mVcdFile, icmp_ln1494_13_fu_464_p2, "icmp_ln1494_13_fu_464_p2");
    sc_trace(mVcdFile, trunc_ln708_13_fu_470_p4, "trunc_ln708_13_fu_470_p4");
    sc_trace(mVcdFile, icmp_ln1494_14_fu_480_p2, "icmp_ln1494_14_fu_480_p2");
    sc_trace(mVcdFile, trunc_ln708_14_fu_486_p4, "trunc_ln708_14_fu_486_p4");
    sc_trace(mVcdFile, icmp_ln1494_15_fu_496_p2, "icmp_ln1494_15_fu_496_p2");
    sc_trace(mVcdFile, trunc_ln708_15_fu_502_p4, "trunc_ln708_15_fu_502_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

relu_array_array_ap_ufixed_16u_relu_config15_s::~relu_array_array_ap_ufixed_16u_relu_config15_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read()));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n.read();
    } else {
        data_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_0_V_read = ap_const_logic_1;
    } else {
        data_V_data_0_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_10_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_10_V_blk_n = data_V_data_10_V_empty_n.read();
    } else {
        data_V_data_10_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_10_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_10_V_read = ap_const_logic_1;
    } else {
        data_V_data_10_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_11_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_11_V_blk_n = data_V_data_11_V_empty_n.read();
    } else {
        data_V_data_11_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_11_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_11_V_read = ap_const_logic_1;
    } else {
        data_V_data_11_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_12_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_12_V_blk_n = data_V_data_12_V_empty_n.read();
    } else {
        data_V_data_12_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_12_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_12_V_read = ap_const_logic_1;
    } else {
        data_V_data_12_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_13_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_13_V_blk_n = data_V_data_13_V_empty_n.read();
    } else {
        data_V_data_13_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_13_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_13_V_read = ap_const_logic_1;
    } else {
        data_V_data_13_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_14_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_14_V_blk_n = data_V_data_14_V_empty_n.read();
    } else {
        data_V_data_14_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_14_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_14_V_read = ap_const_logic_1;
    } else {
        data_V_data_14_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_15_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_15_V_blk_n = data_V_data_15_V_empty_n.read();
    } else {
        data_V_data_15_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_15_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_15_V_read = ap_const_logic_1;
    } else {
        data_V_data_15_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n.read();
    } else {
        data_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_1_V_read = ap_const_logic_1;
    } else {
        data_V_data_1_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n.read();
    } else {
        data_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_2_V_read = ap_const_logic_1;
    } else {
        data_V_data_2_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n.read();
    } else {
        data_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_3_V_read = ap_const_logic_1;
    } else {
        data_V_data_3_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_4_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n.read();
    } else {
        data_V_data_4_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_4_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_4_V_read = ap_const_logic_1;
    } else {
        data_V_data_4_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_5_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n.read();
    } else {
        data_V_data_5_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_5_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_5_V_read = ap_const_logic_1;
    } else {
        data_V_data_5_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_6_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n.read();
    } else {
        data_V_data_6_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_6_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_6_V_read = ap_const_logic_1;
    } else {
        data_V_data_6_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_7_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n.read();
    } else {
        data_V_data_7_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_7_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_7_V_read = ap_const_logic_1;
    } else {
        data_V_data_7_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_8_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_8_V_blk_n = data_V_data_8_V_empty_n.read();
    } else {
        data_V_data_8_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_8_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_8_V_read = ap_const_logic_1;
    } else {
        data_V_data_8_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_9_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_V_data_9_V_blk_n = data_V_data_9_V_empty_n.read();
    } else {
        data_V_data_9_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_data_V_data_9_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        data_V_data_9_V_read = ap_const_logic_1;
    } else {
        data_V_data_9_V_read = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_10_fu_416_p2() {
    icmp_ln1494_10_fu_416_p2 = (!data_V_data_10_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_10_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_11_fu_432_p2() {
    icmp_ln1494_11_fu_432_p2 = (!data_V_data_11_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_11_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_12_fu_448_p2() {
    icmp_ln1494_12_fu_448_p2 = (!data_V_data_12_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_12_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_13_fu_464_p2() {
    icmp_ln1494_13_fu_464_p2 = (!data_V_data_13_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_13_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_14_fu_480_p2() {
    icmp_ln1494_14_fu_480_p2 = (!data_V_data_14_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_14_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_15_fu_496_p2() {
    icmp_ln1494_15_fu_496_p2 = (!data_V_data_15_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_15_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_1_fu_272_p2() {
    icmp_ln1494_1_fu_272_p2 = (!data_V_data_1_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_1_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_2_fu_288_p2() {
    icmp_ln1494_2_fu_288_p2 = (!data_V_data_2_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_2_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_3_fu_304_p2() {
    icmp_ln1494_3_fu_304_p2 = (!data_V_data_3_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_3_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_4_fu_320_p2() {
    icmp_ln1494_4_fu_320_p2 = (!data_V_data_4_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_4_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_5_fu_336_p2() {
    icmp_ln1494_5_fu_336_p2 = (!data_V_data_5_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_5_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_6_fu_352_p2() {
    icmp_ln1494_6_fu_352_p2 = (!data_V_data_6_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_6_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_7_fu_368_p2() {
    icmp_ln1494_7_fu_368_p2 = (!data_V_data_7_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_7_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_8_fu_384_p2() {
    icmp_ln1494_8_fu_384_p2 = (!data_V_data_8_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_8_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_9_fu_400_p2() {
    icmp_ln1494_9_fu_400_p2 = (!data_V_data_9_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_9_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_icmp_ln1494_fu_256_p2() {
    icmp_ln1494_fu_256_p2 = (!data_V_data_0_V_dout.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(data_V_data_0_V_dout.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_io_acc_block_signal_op102() {
    io_acc_block_signal_op102 = (res_V_data_0_V_full_n.read() & res_V_data_1_V_full_n.read() & res_V_data_2_V_full_n.read() & res_V_data_3_V_full_n.read() & res_V_data_4_V_full_n.read() & res_V_data_5_V_full_n.read() & res_V_data_6_V_full_n.read() & res_V_data_7_V_full_n.read() & res_V_data_8_V_full_n.read() & res_V_data_9_V_full_n.read() & res_V_data_10_V_full_n.read() & res_V_data_11_V_full_n.read() & res_V_data_12_V_full_n.read() & res_V_data_13_V_full_n.read() & res_V_data_14_V_full_n.read() & res_V_data_15_V_full_n.read());
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_io_acc_block_signal_op37() {
    io_acc_block_signal_op37 = (data_V_data_0_V_empty_n.read() & data_V_data_1_V_empty_n.read() & data_V_data_2_V_empty_n.read() & data_V_data_3_V_empty_n.read() & data_V_data_4_V_empty_n.read() & data_V_data_5_V_empty_n.read() & data_V_data_6_V_empty_n.read() & data_V_data_7_V_empty_n.read() & data_V_data_8_V_empty_n.read() & data_V_data_9_V_empty_n.read() & data_V_data_10_V_empty_n.read() & data_V_data_11_V_empty_n.read() & data_V_data_12_V_empty_n.read() & data_V_data_13_V_empty_n.read() & data_V_data_14_V_empty_n.read() & data_V_data_15_V_empty_n.read());
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n.read();
    } else {
        res_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_0_V_din() {
    res_V_data_0_V_din = (!icmp_ln1494_fu_256_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_fu_256_p2.read()[0].to_bool())? trunc_ln_fu_262_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_0_V_write = ap_const_logic_1;
    } else {
        res_V_data_0_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_10_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_10_V_blk_n = res_V_data_10_V_full_n.read();
    } else {
        res_V_data_10_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_10_V_din() {
    res_V_data_10_V_din = (!icmp_ln1494_10_fu_416_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_10_fu_416_p2.read()[0].to_bool())? trunc_ln708_10_fu_422_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_10_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_10_V_write = ap_const_logic_1;
    } else {
        res_V_data_10_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_11_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_11_V_blk_n = res_V_data_11_V_full_n.read();
    } else {
        res_V_data_11_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_11_V_din() {
    res_V_data_11_V_din = (!icmp_ln1494_11_fu_432_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_11_fu_432_p2.read()[0].to_bool())? trunc_ln708_11_fu_438_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_11_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_11_V_write = ap_const_logic_1;
    } else {
        res_V_data_11_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_12_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_12_V_blk_n = res_V_data_12_V_full_n.read();
    } else {
        res_V_data_12_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_12_V_din() {
    res_V_data_12_V_din = (!icmp_ln1494_12_fu_448_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_12_fu_448_p2.read()[0].to_bool())? trunc_ln708_12_fu_454_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_12_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_12_V_write = ap_const_logic_1;
    } else {
        res_V_data_12_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_13_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_13_V_blk_n = res_V_data_13_V_full_n.read();
    } else {
        res_V_data_13_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_13_V_din() {
    res_V_data_13_V_din = (!icmp_ln1494_13_fu_464_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_13_fu_464_p2.read()[0].to_bool())? trunc_ln708_13_fu_470_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_13_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_13_V_write = ap_const_logic_1;
    } else {
        res_V_data_13_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_14_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_14_V_blk_n = res_V_data_14_V_full_n.read();
    } else {
        res_V_data_14_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_14_V_din() {
    res_V_data_14_V_din = (!icmp_ln1494_14_fu_480_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_14_fu_480_p2.read()[0].to_bool())? trunc_ln708_14_fu_486_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_14_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_14_V_write = ap_const_logic_1;
    } else {
        res_V_data_14_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_15_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_15_V_blk_n = res_V_data_15_V_full_n.read();
    } else {
        res_V_data_15_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_15_V_din() {
    res_V_data_15_V_din = (!icmp_ln1494_15_fu_496_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_15_fu_496_p2.read()[0].to_bool())? trunc_ln708_15_fu_502_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_15_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_15_V_write = ap_const_logic_1;
    } else {
        res_V_data_15_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n.read();
    } else {
        res_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_1_V_din() {
    res_V_data_1_V_din = (!icmp_ln1494_1_fu_272_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_1_fu_272_p2.read()[0].to_bool())? trunc_ln708_1_fu_278_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_1_V_write = ap_const_logic_1;
    } else {
        res_V_data_1_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n.read();
    } else {
        res_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_2_V_din() {
    res_V_data_2_V_din = (!icmp_ln1494_2_fu_288_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_2_fu_288_p2.read()[0].to_bool())? trunc_ln708_2_fu_294_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_2_V_write = ap_const_logic_1;
    } else {
        res_V_data_2_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n.read();
    } else {
        res_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_3_V_din() {
    res_V_data_3_V_din = (!icmp_ln1494_3_fu_304_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_3_fu_304_p2.read()[0].to_bool())? trunc_ln708_3_fu_310_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_3_V_write = ap_const_logic_1;
    } else {
        res_V_data_3_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_4_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n.read();
    } else {
        res_V_data_4_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_4_V_din() {
    res_V_data_4_V_din = (!icmp_ln1494_4_fu_320_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_4_fu_320_p2.read()[0].to_bool())? trunc_ln708_4_fu_326_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_4_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_4_V_write = ap_const_logic_1;
    } else {
        res_V_data_4_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_5_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n.read();
    } else {
        res_V_data_5_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_5_V_din() {
    res_V_data_5_V_din = (!icmp_ln1494_5_fu_336_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_5_fu_336_p2.read()[0].to_bool())? trunc_ln708_5_fu_342_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_5_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_5_V_write = ap_const_logic_1;
    } else {
        res_V_data_5_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_6_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n.read();
    } else {
        res_V_data_6_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_6_V_din() {
    res_V_data_6_V_din = (!icmp_ln1494_6_fu_352_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_6_fu_352_p2.read()[0].to_bool())? trunc_ln708_6_fu_358_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_6_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_6_V_write = ap_const_logic_1;
    } else {
        res_V_data_6_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_7_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n.read();
    } else {
        res_V_data_7_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_7_V_din() {
    res_V_data_7_V_din = (!icmp_ln1494_7_fu_368_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_7_fu_368_p2.read()[0].to_bool())? trunc_ln708_7_fu_374_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_7_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_7_V_write = ap_const_logic_1;
    } else {
        res_V_data_7_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_8_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_8_V_blk_n = res_V_data_8_V_full_n.read();
    } else {
        res_V_data_8_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_8_V_din() {
    res_V_data_8_V_din = (!icmp_ln1494_8_fu_384_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_8_fu_384_p2.read()[0].to_bool())? trunc_ln708_8_fu_390_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_8_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_8_V_write = ap_const_logic_1;
    } else {
        res_V_data_8_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_9_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        res_V_data_9_V_blk_n = res_V_data_9_V_full_n.read();
    } else {
        res_V_data_9_V_blk_n = ap_const_logic_1;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_9_V_din() {
    res_V_data_9_V_din = (!icmp_ln1494_9_fu_400_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_ln1494_9_fu_400_p2.read()[0].to_bool())? trunc_ln708_9_fu_406_p4.read(): ap_const_lv12_0);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_res_V_data_9_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op37.read()) || esl_seteq<1,1,1>(ap_const_logic_0, io_acc_block_signal_op102.read())))) {
        res_V_data_9_V_write = ap_const_logic_1;
    } else {
        res_V_data_9_V_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_start_out() {
    start_out = real_start.read();
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_10_fu_422_p4() {
    trunc_ln708_10_fu_422_p4 = data_V_data_10_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_11_fu_438_p4() {
    trunc_ln708_11_fu_438_p4 = data_V_data_11_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_12_fu_454_p4() {
    trunc_ln708_12_fu_454_p4 = data_V_data_12_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_13_fu_470_p4() {
    trunc_ln708_13_fu_470_p4 = data_V_data_13_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_14_fu_486_p4() {
    trunc_ln708_14_fu_486_p4 = data_V_data_14_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_15_fu_502_p4() {
    trunc_ln708_15_fu_502_p4 = data_V_data_15_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_1_fu_278_p4() {
    trunc_ln708_1_fu_278_p4 = data_V_data_1_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_2_fu_294_p4() {
    trunc_ln708_2_fu_294_p4 = data_V_data_2_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_3_fu_310_p4() {
    trunc_ln708_3_fu_310_p4 = data_V_data_3_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_4_fu_326_p4() {
    trunc_ln708_4_fu_326_p4 = data_V_data_4_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_5_fu_342_p4() {
    trunc_ln708_5_fu_342_p4 = data_V_data_5_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_6_fu_358_p4() {
    trunc_ln708_6_fu_358_p4 = data_V_data_6_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_7_fu_374_p4() {
    trunc_ln708_7_fu_374_p4 = data_V_data_7_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_8_fu_390_p4() {
    trunc_ln708_8_fu_390_p4 = data_V_data_8_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln708_9_fu_406_p4() {
    trunc_ln708_9_fu_406_p4 = data_V_data_9_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_trunc_ln_fu_262_p4() {
    trunc_ln_fu_262_p4 = data_V_data_0_V_dout.read().range(12, 1);
}

void relu_array_array_ap_ufixed_16u_relu_config15_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

