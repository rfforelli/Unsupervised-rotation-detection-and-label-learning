// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_array_array_ap_fixed_16_6_5_3_0_6u_config16_s_HH_
#define _dense_array_array_ap_fixed_16_6_5_3_0_6u_config16_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s.h"

namespace ap_rtl {

struct dense_array_array_ap_fixed_16_6_5_3_0_6u_config16_s : public sc_module {
    // Port declarations 73
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > data_stream_V_data_0_V_dout;
    sc_in< sc_logic > data_stream_V_data_0_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_0_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_1_V_dout;
    sc_in< sc_logic > data_stream_V_data_1_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_1_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_2_V_dout;
    sc_in< sc_logic > data_stream_V_data_2_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_2_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_3_V_dout;
    sc_in< sc_logic > data_stream_V_data_3_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_3_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_4_V_dout;
    sc_in< sc_logic > data_stream_V_data_4_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_4_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_5_V_dout;
    sc_in< sc_logic > data_stream_V_data_5_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_5_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_6_V_dout;
    sc_in< sc_logic > data_stream_V_data_6_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_6_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_7_V_dout;
    sc_in< sc_logic > data_stream_V_data_7_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_7_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_8_V_dout;
    sc_in< sc_logic > data_stream_V_data_8_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_8_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_9_V_dout;
    sc_in< sc_logic > data_stream_V_data_9_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_9_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_10_V_dout;
    sc_in< sc_logic > data_stream_V_data_10_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_10_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_11_V_dout;
    sc_in< sc_logic > data_stream_V_data_11_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_11_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_12_V_dout;
    sc_in< sc_logic > data_stream_V_data_12_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_12_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_13_V_dout;
    sc_in< sc_logic > data_stream_V_data_13_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_13_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_14_V_dout;
    sc_in< sc_logic > data_stream_V_data_14_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_14_V_read;
    sc_in< sc_lv<12> > data_stream_V_data_15_V_dout;
    sc_in< sc_logic > data_stream_V_data_15_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_15_V_read;
    sc_out< sc_lv<16> > res_stream_V_data_0_V_din;
    sc_in< sc_logic > res_stream_V_data_0_V_full_n;
    sc_out< sc_logic > res_stream_V_data_0_V_write;
    sc_out< sc_lv<16> > res_stream_V_data_1_V_din;
    sc_in< sc_logic > res_stream_V_data_1_V_full_n;
    sc_out< sc_logic > res_stream_V_data_1_V_write;
    sc_out< sc_lv<16> > res_stream_V_data_2_V_din;
    sc_in< sc_logic > res_stream_V_data_2_V_full_n;
    sc_out< sc_logic > res_stream_V_data_2_V_write;
    sc_out< sc_lv<16> > res_stream_V_data_3_V_din;
    sc_in< sc_logic > res_stream_V_data_3_V_full_n;
    sc_out< sc_logic > res_stream_V_data_3_V_write;
    sc_out< sc_lv<16> > res_stream_V_data_4_V_din;
    sc_in< sc_logic > res_stream_V_data_4_V_full_n;
    sc_out< sc_logic > res_stream_V_data_4_V_write;
    sc_out< sc_lv<16> > res_stream_V_data_5_V_din;
    sc_in< sc_logic > res_stream_V_data_5_V_full_n;
    sc_out< sc_logic > res_stream_V_data_5_V_write;


    // Module declarations
    dense_array_array_ap_fixed_16_6_5_3_0_6u_config16_s(sc_module_name name);
    SC_HAS_PROCESS(dense_array_array_ap_fixed_16_6_5_3_0_6u_config16_s);

    ~dense_array_array_ap_fixed_16_6_5_3_0_6u_config16_s();

    sc_trace_file* mVcdFile;

    dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s* grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > data_stream_V_data_0_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_3_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_4_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_5_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_6_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_7_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_8_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_9_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_10_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_11_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_12_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_13_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_14_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_15_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > res_stream_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_4_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_5_V_blk_n;
    sc_signal< sc_lv<12> > data_0_V_reg_264;
    sc_signal< sc_logic > io_acc_block_signal_op3;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<12> > data_1_V_reg_269;
    sc_signal< sc_lv<12> > data_2_V_reg_274;
    sc_signal< sc_lv<12> > data_3_V_reg_279;
    sc_signal< sc_lv<12> > data_4_V_reg_284;
    sc_signal< sc_lv<12> > data_5_V_reg_289;
    sc_signal< sc_lv<12> > data_6_V_reg_294;
    sc_signal< sc_lv<12> > data_7_V_reg_299;
    sc_signal< sc_lv<12> > data_8_V_reg_304;
    sc_signal< sc_lv<12> > data_9_V_reg_309;
    sc_signal< sc_lv<12> > data_10_V_reg_314;
    sc_signal< sc_lv<12> > data_11_V_reg_319;
    sc_signal< sc_lv<12> > data_12_V_reg_324;
    sc_signal< sc_lv<12> > data_13_V_reg_329;
    sc_signal< sc_lv<12> > data_14_V_reg_334;
    sc_signal< sc_lv<12> > data_15_V_reg_339;
    sc_signal< sc_logic > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_start;
    sc_signal< sc_logic > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_done;
    sc_signal< sc_logic > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_idle;
    sc_signal< sc_logic > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_ready;
    sc_signal< sc_lv<16> > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_return_0;
    sc_signal< sc_lv<16> > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_return_1;
    sc_signal< sc_lv<16> > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_return_2;
    sc_signal< sc_lv<16> > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_return_3;
    sc_signal< sc_lv<16> > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_return_4;
    sc_signal< sc_lv<16> > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_return_5;
    sc_signal< sc_logic > grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_start_reg;
    sc_signal< bool > ap_block_state1_ignore_call40;
    sc_signal< sc_logic > io_acc_block_signal_op52;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_state1();
    void thread_ap_block_state1_ignore_call40();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_stream_V_data_0_V_blk_n();
    void thread_data_stream_V_data_0_V_read();
    void thread_data_stream_V_data_10_V_blk_n();
    void thread_data_stream_V_data_10_V_read();
    void thread_data_stream_V_data_11_V_blk_n();
    void thread_data_stream_V_data_11_V_read();
    void thread_data_stream_V_data_12_V_blk_n();
    void thread_data_stream_V_data_12_V_read();
    void thread_data_stream_V_data_13_V_blk_n();
    void thread_data_stream_V_data_13_V_read();
    void thread_data_stream_V_data_14_V_blk_n();
    void thread_data_stream_V_data_14_V_read();
    void thread_data_stream_V_data_15_V_blk_n();
    void thread_data_stream_V_data_15_V_read();
    void thread_data_stream_V_data_1_V_blk_n();
    void thread_data_stream_V_data_1_V_read();
    void thread_data_stream_V_data_2_V_blk_n();
    void thread_data_stream_V_data_2_V_read();
    void thread_data_stream_V_data_3_V_blk_n();
    void thread_data_stream_V_data_3_V_read();
    void thread_data_stream_V_data_4_V_blk_n();
    void thread_data_stream_V_data_4_V_read();
    void thread_data_stream_V_data_5_V_blk_n();
    void thread_data_stream_V_data_5_V_read();
    void thread_data_stream_V_data_6_V_blk_n();
    void thread_data_stream_V_data_6_V_read();
    void thread_data_stream_V_data_7_V_blk_n();
    void thread_data_stream_V_data_7_V_read();
    void thread_data_stream_V_data_8_V_blk_n();
    void thread_data_stream_V_data_8_V_read();
    void thread_data_stream_V_data_9_V_blk_n();
    void thread_data_stream_V_data_9_V_read();
    void thread_grp_dense_wrapper_ap_ufixed_ap_fixed_16_6_5_3_0_config16_s_fu_130_ap_start();
    void thread_io_acc_block_signal_op3();
    void thread_io_acc_block_signal_op52();
    void thread_res_stream_V_data_0_V_blk_n();
    void thread_res_stream_V_data_0_V_din();
    void thread_res_stream_V_data_0_V_write();
    void thread_res_stream_V_data_1_V_blk_n();
    void thread_res_stream_V_data_1_V_din();
    void thread_res_stream_V_data_1_V_write();
    void thread_res_stream_V_data_2_V_blk_n();
    void thread_res_stream_V_data_2_V_din();
    void thread_res_stream_V_data_2_V_write();
    void thread_res_stream_V_data_3_V_blk_n();
    void thread_res_stream_V_data_3_V_din();
    void thread_res_stream_V_data_3_V_write();
    void thread_res_stream_V_data_4_V_blk_n();
    void thread_res_stream_V_data_4_V_din();
    void thread_res_stream_V_data_4_V_write();
    void thread_res_stream_V_data_5_V_blk_n();
    void thread_res_stream_V_data_5_V_din();
    void thread_res_stream_V_data_5_V_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
